/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scss/style.scss":
/*!*****************************!*\
  !*** ./src/scss/style.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://dashboard/./src/scss/style.scss?");

/***/ }),

/***/ "./node_modules/morse-decoder/src/index.js":
/*!*************************************************!*\
  !*** ./node_modules/morse-decoder/src/index.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\n\nconst baseCharacters = {\n    '1': {\n        'A': '01', 'B': '1000', 'C': '1010', 'D': '100', 'E': '0', 'F': '0010',\n        'G': '110', 'H': '0000', 'I': '00', 'J': '0111', 'K': '101', 'L': '0100',\n        'M': '11', 'N': '10', 'O': '111', 'P': '0110', 'Q': '1101', 'R': '010',\n        'S': '000', 'T': '1', 'U': '001', 'V': '0001', 'W': '011', 'X': '1001',\n        'Y': '1011', 'Z': '1100'\n    },\n    '2': {\n        '0': '11111', '1': '01111', '2': '00111', '3': '00011', '4': '00001',\n        '5': '00000', '6': '10000', '7': '11000', '8': '11100', '9': '11110'\n    },\n    '3': {\n        '.': '010101', ',': '110011', '?': '001100', '\\'': '011110', '!': '101011', '/': '10010',\n        '(': '10110', ')': '101101', '&': '01000', ':': '111000', ';': '101010', '=': '10001',\n        '+': '01010', '-': '100001', '_': '001101', '\"': '010010', '$': '0001001', '@': '011010',\n        '¿': '00101', '¡': '110001'\n    },\n    '4': {\n        'Ã': '01101', 'Á': '01101', 'Å': '01101', 'À': '01101', 'Â': '01101', 'Ä': '0101',\n        'Ą': '0101', 'Æ': '0101', 'Ç': '10100', 'Ć': '10100', 'Ĉ': '10100', 'Č': '110',\n        'Ð': '00110', 'È': '01001', 'Ę': '00100', 'Ë': '00100', 'É': '00100',\n        'Ê': '10010', 'Ğ': '11010', 'Ĝ': '11010', 'Ĥ': '1111', 'İ': '01001', 'Ï': '10011',\n        'Ì': '01110', 'Ĵ': '01110', 'Ł': '01001', 'Ń': '11011', 'Ñ': '11011', 'Ó': '1110',\n        'Ò': '1110', 'Ö': '1110', 'Ô': '1110', 'Ø': '1110', 'Ś': '0001000', 'Ş': '01100',\n        'Ș': '1111', 'Š': '1111', 'Ŝ': '00010', 'ß': '000000', 'Þ': '01100', 'Ü': '0011',\n        'Ù': '0011', 'Ŭ': '0011', 'Ž': '11001', 'Ź': '110010', 'Ż': '11001'\n    },\n    '5': {\n        'А': '01', 'Б': '1000', 'В': '011', 'Г': '110', 'Д': '100', 'Е': '0',\n        'Ж': '0001', 'З': '1100', 'И': '00', 'Й': '0111', 'К': '101', 'Л': '0100',\n        'М': '11', 'Н': '10', 'О': '111', 'П': '0110', 'Р': '010', 'С': '000',\n        'Т': '1', 'У': '001', 'Ф': '0010', 'Х': '0000', 'Ц': '1010', 'Ч': '1110',\n        'Ш': '1111', 'Щ': '1101', 'Ъ': '11011', 'Ы': '1011', 'Ь': '1001', 'Э': '00100',\n        'Ю': '0011', 'Я': '0101', 'Ї': '01110', 'Є': '00100', 'І': '00', 'Ґ': '110'\n    },\n    '6': {\n        'Α': '01', 'Β': '1000', 'Γ': '110', 'Δ': '100', 'Ε': '0', 'Ζ': '1100',\n        'Η': '0000', 'Θ': '1010', 'Ι': '00', 'Κ': '101', 'Λ': '0100', 'Μ': '11',\n        'Ν': '10', 'Ξ': '1001', 'Ο': '111', 'Π': '0110', 'Ρ': '010', 'Σ': '000',\n        'Τ': '1', 'Υ': '1011', 'Φ': '0010', 'Χ': '1111', 'Ψ': '1101', 'Ω': '011'\n    },\n    '7': {\n        'א': '01', 'ב': '1000', 'ג': '110', 'ד': '100', 'ה': '111', 'ו': '0',\n        'ז': '1100', 'ח': '0000', 'ט': '001', 'י': '00', 'כ': '101', 'ל': '0100',\n        'מ': '11', 'נ': '10', 'ס': '1010', 'ע': '0111', 'פ': '0110', 'צ': '011',\n        'ק': '1101', 'ר': '010', 'ש': '000', 'ת': '1'\n    },\n    '8': {\n        'ا': '01', 'ب': '1000', 'ت': '1', 'ث': '1010', 'ج': '0111', 'ح': '0000',\n        'خ': '111', 'د': '100', 'ذ': '1100', 'ر': '010', 'ز': '1110', 'س': '000',\n        'ش': '1111', 'ص': '1001', 'ض': '0001', 'ط': '001', 'ظ': '1011', 'ع': '0101',\n        'غ': '110', 'ف': '0010', 'ق': '1101', 'ك': '101', 'ل': '0100', 'م': '11',\n        'ن': '10', 'ه': '00100', 'و': '011', 'ي': '00', 'ﺀ': '0'\n    },\n    '9': {\n        'ا': '01', 'ب': '1000', 'پ': '0110', 'ت': '1', 'ث': '1010', 'ج': '0111',\n        'چ': '1110', 'ح': '0000', 'خ': '1001', 'د': '100', 'ذ': '0001', 'ر': '010',\n        'ز': '1100', 'ژ': '110', 'س': '000', 'ش': '1111', 'ص': '0101', 'ض': '00100',\n        'ط': '001', 'ظ': '1011', 'ع': '111', 'غ': '0011', 'ف': '0010', 'ق': '111000',\n        'ک': '101', 'گ': '1101', 'ل': '0100', 'م': '11', 'ن': '10', 'و': '011',\n        'ه': '0', 'ی': '00'\n    },\n    '10': {\n        'ア': '11011', 'カ': '0100', 'サ': '10101', 'タ': '10', 'ナ': '010', 'ハ': '1000',\n        'マ': '1001', 'ヤ': '011', 'ラ': '000', 'ワ': '101', 'イ': '01', 'キ': '10100',\n        'シ': '11010', 'チ': '0010', 'ニ': '1010', 'ヒ': '11001', 'ミ': '00101', 'リ': '110',\n        'ヰ': '01001', 'ウ': '001', 'ク': '0001', 'ス': '11101', 'ツ': '0110', 'ヌ': '0000',\n        'フ': '1100', 'ム': '1', 'ユ': '10011', 'ル': '10110', 'ン': '01010', 'エ': '10111',\n        'ケ': '1011', 'セ': '01110', 'テ': '01011', 'ネ': '1101', 'ヘ': '0', 'メ': '10001',\n        'レ': '111', 'ヱ': '01100', 'オ': '01000', 'コ': '1111', 'ソ': '1110', 'ト': '00100',\n        'ノ': '0011', 'ホ': '100', 'モ': '10010', 'ヨ': '11', 'ロ': '0101', 'ヲ': '0111',\n        '゛': '00', '゜': '00110', '。': '010100', 'ー': '01101', '、': '010101',\n        '（': '101101', '）': '010010'\n    },\n    '11': {\n        'ㄱ': '0100', 'ㄴ': '0010', 'ㄷ': '1000', 'ㄹ': '0001', 'ㅁ': '11', 'ㅂ': '011',\n        'ㅅ': '110', 'ㅇ': '101', 'ㅈ': '0110', 'ㅊ': '1010', 'ㅋ': '1001', 'ㅌ': '1100',\n        'ㅍ': '111', 'ㅎ': '0111', 'ㅏ': '0', 'ㅑ': '00', 'ㅓ': '1', 'ㅕ': '000',\n        'ㅗ': '01', 'ㅛ': '10', 'ㅜ': '0000', 'ㅠ': '010', 'ㅡ': '100', 'ㅣ': '001'\n    },\n    '12': {\n        'ก': '110', 'ข': '1010', 'ค': '101', 'ง': '10110', 'จ': '10010',\n        'ฉ': '1111', 'ช': '1001', 'ซ': '1100', 'ญ': '0111', 'ด': '100',\n        'ต': '1', 'ถ': '10100', 'ท': '10011', 'น': '10', 'บ': '1000',\n        'ป': '0110', 'ผ': '1101', 'ฝ': '10101', 'พ': '01100', 'ฟ': '0010',\n        'ม': '11', 'ย': '1011', 'ร': '010', 'ล': '0100', 'ว': '011',\n        'ส': '000', 'ห': '0000', 'อ': '10001', 'ฮ': '11011', 'ฤ': '01011',\n        'ะ': '01000', 'า': '01', 'ิ': '00100', 'ี': '00', 'ึ': '00110',\n        'ื': '0011', 'ุ': '00101', 'ู': '1110', 'เ': '0', 'แ': '0101',\n        'ไ': '01001', 'โ': '111', 'ำ': '00010', '่': '001', '้': '0001',\n        '๊': '11000', '๋': '01010', 'ั': '01101', '็': '11100', '์': '11001',\n        'ๆ': '10111', 'ฯ': '11010'\n    }\n};\nconst getCharacters = (options) => (Object.assign(Object.assign({}, baseCharacters), { '0': baseCharacters[options.priority], '1': Object.assign(Object.assign({}, baseCharacters['1']), { [options.separator]: options.space }) }));\nconst getMappedCharacters = (options, usePriority) => {\n    const mapped = {};\n    const characters = getCharacters(options);\n    for (const set in characters) {\n        mapped[set] = {};\n        for (const key in characters[set]) {\n            mapped[set][key] = characters[set][key].replace(/0/g, options.dot).replace(/1/g, options.dash);\n        }\n    }\n    if (!usePriority) {\n        delete mapped['0'];\n    }\n    return mapped;\n};\nconst swapCharacters = (options) => {\n    const swapped = {};\n    const mappedCharacters = getMappedCharacters(options, true);\n    for (const set in mappedCharacters) {\n        for (const key in mappedCharacters[set]) {\n            if (typeof swapped[mappedCharacters[set][key]] === 'undefined') {\n                swapped[mappedCharacters[set][key]] = key;\n            }\n        }\n    }\n    return swapped;\n};\n\nconst getOptions = (opts = {}) => {\n    var _a, _b, _c;\n    const options = Object.assign(Object.assign({}, opts), { dash: opts.dash || '-', dot: opts.dot || '.', space: opts.space || '/', separator: opts.separator || ' ', invalid: opts.invalid || '#', priority: opts.priority || 1, wpm: opts.wpm, unit: opts.unit || 0.08, fwUnit: opts.fwUnit || opts.unit || 0.08, volume: opts.volume || 100, oscillator: Object.assign(Object.assign({}, opts.oscillator), { type: ((_a = opts.oscillator) === null || _a === void 0 ? void 0 : _a.type) || 'sine', frequency: ((_b = opts.oscillator) === null || _b === void 0 ? void 0 : _b.frequency) || 500, onended: ((_c = opts.oscillator) === null || _c === void 0 ? void 0 : _c.onended) || null // event that fires when the tone has stopped playing\n         }) });\n    return options;\n};\n\nconst getGainTimings = (morse, opts, currentTime = 0) => {\n    const timings = [];\n    let { unit, fwUnit } = opts;\n    let time = 0;\n    if (opts.wpm) {\n        // wpm mode uses standardised units\n        unit = fwUnit = 60 / (opts.wpm * 50);\n    }\n    timings.push([0, time]);\n    const tone = (i) => {\n        timings.push([1 * (opts.volume / 100.0), currentTime + time]);\n        time += i * unit;\n    };\n    const silence = (i) => {\n        timings.push([0, currentTime + time]);\n        time += i * unit;\n    };\n    const gap = (i) => {\n        timings.push([0, currentTime + time]);\n        time += i * fwUnit;\n    };\n    for (let i = 0, addSilence = false; i <= morse.length; i++) {\n        if (morse[i] === opts.space) {\n            gap(7);\n            addSilence = false;\n        }\n        else if (morse[i] === opts.dot) {\n            if (addSilence)\n                silence(1);\n            else\n                addSilence = true;\n            tone(1);\n        }\n        else if (morse[i] === opts.dash) {\n            if (addSilence)\n                silence(1);\n            else\n                addSilence = true;\n            tone(3);\n        }\n        else if ((typeof morse[i + 1] !== 'undefined' && morse[i + 1] !== opts.space) &&\n            (typeof morse[i - 1] !== 'undefined' && morse[i - 1] !== opts.space)) {\n            gap(3);\n            addSilence = false;\n        }\n    }\n    return [timings, time];\n};\n// Source: https://github.com/mattdiamond/Recorderjs/blob/master/src/recorder.js#L155\nconst encodeWAV = (sampleRate, samples) => {\n    const buffer = new ArrayBuffer(44 + samples.length * 2);\n    const view = new DataView(buffer);\n    const writeString = (view, offset, string) => {\n        for (let i = 0; i < string.length; i++) {\n            view.setUint8(offset + i, string.charCodeAt(i));\n        }\n    };\n    // RIFF identifier\n    writeString(view, 0, 'RIFF');\n    // RIFF chunk length\n    view.setUint32(4, 36 + samples.length * 2, true);\n    // RIFF type\n    writeString(view, 8, 'WAVE');\n    // format chunk identifier\n    writeString(view, 12, 'fmt ');\n    // format chunk length\n    view.setUint32(16, 16, true);\n    // sample format (raw)\n    view.setUint16(20, 1, true);\n    // channel count\n    view.setUint16(22, 1, true);\n    // sample rate\n    view.setUint32(24, sampleRate, true);\n    // byte rate (sample rate * block align)\n    view.setUint32(28, sampleRate * 4, true);\n    // block align (channel count * bytes per sample)\n    view.setUint16(32, 2, true);\n    // bits per sample\n    view.setUint16(34, 16, true);\n    // data chunk identifier\n    writeString(view, 36, 'data');\n    // data chunk length\n    view.setUint32(40, samples.length * 2, true);\n    // to PCM\n    const floatTo16BitPCM = (output, offset, input) => {\n        for (let i = 0; i < input.length; i++, offset += 2) {\n            const s = Math.max(-1, Math.min(1, input[i]));\n            output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n    };\n    floatTo16BitPCM(view, 44, samples);\n    return view;\n};\nconst audio = (morse, options) => {\n    let AudioContext = null;\n    let OfflineAudioContext = null;\n    let context = null;\n    let offlineContext = null;\n    let source;\n    const [gainValues, totalTime] = getGainTimings(morse, options);\n    if (AudioContext === null && typeof window !== 'undefined') {\n        AudioContext = window.AudioContext || window.webkitAudioContext;\n        context = new AudioContext();\n        source = context.createBufferSource();\n        source.connect(context.destination);\n    }\n    if (OfflineAudioContext === null && typeof window !== 'undefined') {\n        OfflineAudioContext = window.OfflineAudioContext || window.webkitOfflineAudioContext;\n        offlineContext = new OfflineAudioContext(1, 44100 * totalTime, 44100);\n    }\n    const oscillator = offlineContext.createOscillator();\n    const gainNode = offlineContext.createGain();\n    oscillator.type = options.oscillator.type;\n    oscillator.frequency.value = options.oscillator.frequency;\n    gainValues.forEach(([value, time]) => gainNode.gain.setValueAtTime(value, time));\n    oscillator.connect(gainNode);\n    gainNode.connect(offlineContext.destination);\n    source.onended = options.oscillator.onended;\n    // Inspired by: http://joesul.li/van/tale-of-no-clocks/\n    const render = new Promise(resolve => {\n        oscillator.start(0);\n        offlineContext.startRendering();\n        offlineContext.oncomplete = (e) => {\n            source.buffer = e.renderedBuffer;\n            resolve();\n        };\n    });\n    let timeout;\n    const play = async () => {\n        await render;\n        source.start(context.currentTime);\n        timeout = setTimeout(() => { stop(); }, totalTime * 1000);\n    };\n    const stop = () => {\n        clearTimeout(timeout);\n        timeout = 0;\n        source.stop(0);\n    };\n    const getWaveBlob = async () => {\n        await render;\n        const waveData = encodeWAV(offlineContext.sampleRate, source.buffer.getChannelData(0));\n        return new Blob([waveData], { 'type': 'audio/wav' });\n    };\n    const getWaveUrl = async () => {\n        const audioBlob = await getWaveBlob();\n        return URL.createObjectURL(audioBlob);\n    };\n    const exportWave = async (filename) => {\n        const waveUrl = await getWaveUrl();\n        const anchor = document.createElement('a');\n        anchor.href = waveUrl;\n        anchor.target = '_blank';\n        anchor.download = filename || 'morse.wav';\n        anchor.click();\n    };\n    return {\n        play,\n        stop,\n        getWaveBlob,\n        getWaveUrl,\n        exportWave,\n        context,\n        oscillator,\n        gainNode\n    };\n};\n\n(((name, root, factory) => {\n    if (true) {\n        module.exports = factory();\n    }\n    else {}\n})('morse-decoder', globalThis, () => {\n    const encode = (text, opts) => {\n        const options = getOptions(opts);\n        const characters = getCharacters(options);\n        return [...text.replace(/\\s+/g, options.separator).trim().toLocaleUpperCase()].map(function (character) {\n            for (const set in characters) {\n                if (typeof characters[set] !== 'undefined' && typeof characters[set][character] !== 'undefined') {\n                    return characters[set][character];\n                }\n            }\n            return options.invalid;\n        }).join(options.separator).replace(/0/g, options.dot).replace(/1/g, options.dash);\n    };\n    const decode = (morse, opts) => {\n        const options = getOptions(opts);\n        const swapped = swapCharacters(options);\n        return morse.replace(/\\s+/g, options.separator).trim().split(options.separator).map(function (characters) {\n            if (typeof swapped[characters] !== 'undefined') {\n                return swapped[characters];\n            }\n            return options.invalid;\n        }).join('');\n    };\n    const characters = (options, usePriority) => getMappedCharacters(getOptions(options), usePriority);\n    const audio$1 = (text, opts, morseString) => {\n        const morse = morseString || encode(text, opts);\n        const options = getOptions(opts);\n        return audio(morse, options);\n    };\n    return {\n        characters,\n        decode,\n        encode,\n        audio: audio$1\n    };\n}));\n\n\n//# sourceURL=webpack://dashboard/./node_modules/morse-decoder/src/index.js?");

/***/ }),

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scss_style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scss/style.scss */ \"./src/scss/style.scss\");\n/* harmony import */ var _modules_main__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/main */ \"./src/modules/main.js\");\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://dashboard/./src/app.js?");

/***/ }),

/***/ "./src/modules/emojiMap.js":
/*!*********************************!*\
  !*** ./src/modules/emojiMap.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"emojiMap\": () => (/* binding */ emojiMap)\n/* harmony export */ });\nconst emojiMap = {\r\n  а: '🍍',\r\n  б: '🍌',\r\n  в: '🌋',\r\n  г: '🎸',\r\n  д: '🐬',\r\n  е: '🦔',\r\n  ё: '🎄',\r\n  ж: '🦒',\r\n  з: '🐉',\r\n  и: '🪡',\r\n  й: '🧘',\r\n  к: '🔑',\r\n  л: '🍋',\r\n  м: '🌙',\r\n  н: '🦏',\r\n  о: '🐙',\r\n  п: '🍕',\r\n  р: '🌹',\r\n  с: '🧃',\r\n  т: '🐅',\r\n  у: '📦',\r\n  ф: '🐡',\r\n  х: '🖼️',\r\n  ц: '🐤',\r\n  ч: '🧾',\r\n  ш: '🎩',\r\n  щ: '🪥',\r\n  ь: '📜',\r\n  ы: '🦉',\r\n  ъ: '🗿',\r\n  э: '🐨',\r\n  ю: '👨‍💼',\r\n  я: '⚓',\r\n  ї: '🦔',\r\n  і: '🧑‍🦽',\r\n  ґ: '🏠',\r\n  a: '🍎',\r\n  b: '🍌',\r\n  c: '🐱',\r\n  d: '🐶',\r\n  e: '🦅',\r\n  f: '🐸',\r\n  g: '🍇',\r\n  h: '🏠',\r\n  i: '🍦',\r\n  j: '🧃',\r\n  k: '🔑',\r\n  l: '🍋',\r\n  m: '🌙',\r\n  n: '🍜',\r\n  o: '🐙',\r\n  p: '🍕',\r\n  q: '🦜',\r\n  r: '🌹',\r\n  s: '☀️',\r\n  t: '🐅',\r\n  u: '☂️',\r\n  v: '🎻',\r\n  w: '🌊',\r\n  x: '❌',\r\n  y: '☯️',\r\n  z: '🦓',\r\n  ' ': '💬',\r\n  0: '0️⃣',\r\n  1: '1️⃣',\r\n  2: '2️⃣',\r\n  3: '3️⃣',\r\n  4: '4️⃣',\r\n  5: '5️⃣',\r\n  6: '6️⃣',\r\n  7: '7️⃣',\r\n  8: '8️⃣',\r\n  9: '9️⃣',\r\n  ';': '😉',\r\n  '?': '❓',\r\n  '!': '❗',\r\n  '-': '➖',\r\n  '.': '🔵',\r\n  ',': '🟠',\r\n  '/': '🔲',\r\n  '...': '🔂',\r\n  '€': '💶',\r\n  $: '💵',\r\n  '?': '❓',\r\n  '?': '❓',\r\n};\r\n\n\n//# sourceURL=webpack://dashboard/./src/modules/emojiMap.js?");

/***/ }),

/***/ "./src/modules/main.js":
/*!*****************************!*\
  !*** ./src/modules/main.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var morse_decoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! morse-decoder */ \"./node_modules/morse-decoder/src/index.js\");\n/* harmony import */ var morse_decoder__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(morse_decoder__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emojiMap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./emojiMap */ \"./src/modules/emojiMap.js\");\n\r\n\r\n\r\nconst list = document.querySelector('[header-list]');\r\nconst items = document.querySelectorAll('[header-list-item]');\r\nconst inputTextarea = document.querySelector('#area-input');\r\nconst inputLabel = document.querySelector('label[for=\"area-input\"]');\r\nconst outputTextarea = document.querySelector('#area-output');\r\nconst outputLabel = document.querySelector('label[for=\"area-output\"]');\r\nconst dropdown = document.querySelector('.main-content__list-dropdown');\r\nconst dropDownButton = dropdown.querySelector('.main-content__list-dropdown__button');\r\nconst menu = dropdown.querySelector('.main-content__list-dropdown__menu');\r\nconst buttonText = dropdown.querySelector('.main-content__list-dropdown__button span');\r\nconst options = menu.querySelectorAll('li');\r\nconst inputArea = document.getElementById('area-input');\r\nconst outputArea = document.getElementById('area-output');\r\nconst encryptionButton = document.querySelector('[encryption]');\r\nconst copyButton = document.querySelector('[copy]');\r\nconst clearButton = document.querySelector('[clear]');\r\nconst dropdownItems = document.querySelectorAll('.main-content__list-dropdown__menu li');\r\n\r\nconst state = {\r\n  currentIndex: 0,\r\n  scrollDirection: 1,\r\n  selectedMethod: null,\r\n};\r\n\r\nfunction scrollItems() {\r\n  let {currentIndex, scrollDirection} = state;\r\n  list.style.transition = 'transform 0.6s ease-in';\r\n  list.style.transform = `translateY(-${currentIndex * 40}px)`;\r\n\r\n  currentIndex += scrollDirection;\r\n\r\n  if (currentIndex >= items.length) {\r\n    scrollDirection = -1;\r\n    currentIndex = items.length - 2;\r\n  } else if (currentIndex < 0) {\r\n    scrollDirection = 1;\r\n    currentIndex = 1;\r\n  }\r\n  state.currentIndex = currentIndex;\r\n  state.scrollDirection = scrollDirection;\r\n}\r\n\r\nfunction handleDropdownToggle() {\r\n  dropDownButton.addEventListener('click', () => {\r\n    menu.classList.toggle('active');\r\n  });\r\n\r\n  document.addEventListener('click', (e) => {\r\n    if (!dropdown.contains(e.target)) {\r\n      menu.classList.remove('active');\r\n    }\r\n  });\r\n}\r\n\r\nfunction handleDropdownSelection() {\r\n  options.forEach((option) => {\r\n    option.addEventListener('click', () => {\r\n      const selectedText = option.textContent;\r\n      buttonText.textContent = selectedText;\r\n\r\n      buttonText.classList.add('selected');\r\n      menu.classList.remove('active');\r\n    });\r\n  });\r\n}\r\n\r\nfunction handleTextareaFocusBlur(textarea, label) {\r\n  textarea.addEventListener('focus', () => {\r\n    label.classList.add('active');\r\n  });\r\n\r\n  textarea.addEventListener('blur', () => {\r\n    if (textarea.value.trim() === '') {\r\n      label.classList.remove('active');\r\n    }\r\n  });\r\n\r\n  textarea.addEventListener('input', () => {\r\n    if (textarea.value.trim() !== '') {\r\n      label.classList.add('active');\r\n    } else {\r\n      label.classList.remove('active');\r\n    }\r\n  });\r\n}\r\n\r\nfunction updateButtonsState() {\r\n  const isDisabled = !inputArea.value.trim();\r\n  encryptionButton.disabled = isDisabled;\r\n  copyButton.disabled = isDisabled || !outputArea.value.trim();\r\n  clearButton.disabled = isDisabled && !outputArea.value.trim();\r\n}\r\n\r\nfunction updateLabelState(textarea, label) {\r\n  if (textarea.value.trim() !== '') {\r\n    label.classList.add('active');\r\n  } else {\r\n    label.classList.remove('active');\r\n  }\r\n}\r\n\r\nfunction encryptionWithMorse(input) {\r\n  return (0,morse_decoder__WEBPACK_IMPORTED_MODULE_0__.encode)(input);\r\n}\r\n\r\nfunction encryptionWithBase64(input) {\r\n  try {\r\n    const utf8input = unescape(encodeURIComponent(input));\r\n    return btoa(utf8input);\r\n  } catch {\r\n    return 'Error: Invalid input for Base64';\r\n  }\r\n}\r\n\r\nfunction encryptionWithEmoji(input) {\r\n  outputArea.style.textShadow = 'none';\r\n\r\n  return input\r\n    .split('')\r\n    .map((char) => _emojiMap__WEBPACK_IMPORTED_MODULE_1__.emojiMap[char.toLowerCase()] || char)\r\n    .join('');\r\n}\r\n\r\nfunction getEncryptionMessage(method, input) {\r\n  switch (method) {\r\n    case 'morse':\r\n      return encryptionWithMorse(input);\r\n\r\n    case 'base64':\r\n      return encryptionWithBase64(input);\r\n\r\n    case 'emoji':\r\n      return encryptionWithEmoji(input);\r\n\r\n    default:\r\n      return 'Select encryption method';\r\n  }\r\n}\r\n\r\nfunction encryptionMessage() {\r\n  const input = inputArea.value.trim();\r\n  const method = state.selectedMethod;\r\n\r\n  const encryptedMessage = getEncryptionMessage(method, input);\r\n  outputArea.value = encryptedMessage;\r\n\r\n  updateLabelState(outputArea, outputLabel);\r\n  updateButtonsState();\r\n}\r\n\r\nupdateLabelState(outputArea, outputLabel);\r\nupdateButtonsState();\r\n\r\nfunction copyValue() {\r\n  outputArea.select();\r\n  document.execCommand('copy');\r\n}\r\n\r\nfunction clearArea() {\r\n  inputArea.value = '';\r\n  outputArea.value = '';\r\n  updateButtonsState();\r\n}\r\n\r\nfunction initDropDownMenu() {\r\n  handleDropdownToggle();\r\n  handleDropdownSelection();\r\n}\r\nfunction initFocusTextArea() {\r\n  handleTextareaFocusBlur(inputTextarea, inputLabel);\r\n  handleTextareaFocusBlur(outputTextarea, outputLabel);\r\n}\r\n\r\nfunction initApp() {\r\n  initDropDownMenu();\r\n  initFocusTextArea();\r\n  updateButtonsState();\r\n  inputArea.addEventListener('input', updateButtonsState);\r\n  setInterval(scrollItems, 2500);\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  initApp();\r\n});\r\n\r\ncopyButton.addEventListener('click', () => copyValue());\r\nclearButton.addEventListener('click', () => clearArea());\r\nencryptionButton.addEventListener('click', () => encryptionMessage());\r\ndropdownItems.forEach((item) => {\r\n  item.addEventListener('click', () => {\r\n    state.selectedMethod = item.dataset.value;\r\n    // document.querySelector(\".main-content__list-dropdown__button span\").textContent = `Method: ${selectedMethod}`;\r\n    updateButtonsState();\r\n  });\r\n});\r\n\n\n//# sourceURL=webpack://dashboard/./src/modules/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.js");
/******/ 	
/******/ })()
;